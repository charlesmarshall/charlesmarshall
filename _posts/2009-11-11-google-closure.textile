---
layout: post
title: Google Closure Javascript Library
category: web
---

Google have released their "internal javascript library":http://code.google.com/closure/ (no, this isn't about GWT, that is something different) and called it Closure. Odd name and one that is already heavily in use

* Closure - the "first-class function":http://en.wikipedia.org/wiki/Closure_%28computer_science%29
* Clojure - the "lisp dialect":http://en.wikipedia.org/wiki/Clojure
* Clozure - another "lisp implementation":http://en.wikipedia.org/wiki/Clozure_CL
* Closure - a "shutdown tool for X windows":http://code.google.com/p/closure/
* Closure - a "web browser":http://www.stud.uni-karlsruhe.de/~unk6/closure/ 
* and a "whole load more":http://www.google.co.uk/search?hl=en&q=closure .. 

Naming issues aside, "the library":http://closure-library.googlecode.com/svn/trunk/closure/goog/docs/index.html offers a whole host of functions (like all the other major libraries) for dom manipulation, event handling, asynchronous calls etc. There are a couple of nice extras that it does have over other libraries.

h3. Require and Provide

Instead of loading the entire library in (which would be huge) you can just load the bits you need using the @require@ call. Nice start, but it gets better.

If you load part of the library that requires another part of the library google sorts that out for you and loads in for you; now that is smart.

It does this using the @.require@ & @.provide@ methods included in the base closure file.

In the closure files the first thing each one does is tell you what it does and then what it needs...

<pre>
goog.provide('goog.math');
goog.require('goog.array');
</pre>
  
No more missing dependancies!

h3. Compression

As part of the closure library google they also made a "lovely compressor":http://code.google.com/closure/compiler/ to shrink their code to tiny size and then made it into an API. It has a few settings related to how much it compresses the code by (@compilation_level@).

* @WHITESPACE_ONLY@
* @SIMPLE_OPTIMIZATIONS@
* @ADVANCED_OPTIMIZATIONS@

@WHITESPACE_ONLY@ does what you might think, it removes all the whitespace from your js like any other minifying tool. @SIMPLE_OPTIMIZATIONS@ is where it starts to get interesting; white space is gone and local variable names get renamed. Now, when you set it @ADVANCED_OPTIMIZATIONS@ "the really clever stuff starts to happen":http://code.google.com/closure/compiler/docs/api-tutorial3.html. 

There are still a few things you need to watch out for when using @ADVANCED_OPTIMIZATIONS@, mostly to do with consistency and string literals. 

The most obvious one is of course external files using the now compiled javascript will struggle as function names have changed and name spaces might no longer be the same (I need to test this out in detail).

As the google complier page isn't exactly friendly I knocked up a quick site to handle the most common queries and called it "closure optimiser":http://closureoptimizer.com/

