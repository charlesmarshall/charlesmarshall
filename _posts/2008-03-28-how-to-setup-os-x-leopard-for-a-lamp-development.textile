---
layout: post
title: How To: Setup OS X Leopard for a LAMP Development
category: applications
---
Before we start, LAMP = Linux, Apache, MySQL and PHP and yes I know Macs aren't Linux based, but FreeBSD is a flavour of Unix so it's close enough! p. Having recently recieved my lovely new work Macbook Pro and have beensetting it up for some serious PHP %(=amp)&amp;% MySQL development. Some ofthese stages were seriously difficult to find and it took myself andSheldon Els (also on his shiny new Macbook Pro) a while to figure out;so we thought we would share..p. Asboth of us work with a php framework (php-wax) we have to create custominstalls of php, mysql and apache; mainly because the installed versionof php does not support PDO or PEAR. Of course soon as you recompilephp it generates a Darwin version of the shared object that Apache usesmeaning Apache has to be re compiled also.p. Firstly,wipe and reinstall your version of Leopard and remove all of thoseextra printer drivers and languages to save yourself over 5gb.p. Do all of the software updates so any changes you do to the default locations are not over written by a security update.p. I recommend creating a src folder within your user in to keep all of your source files.p. Getyour hands on the latest version of xcode and install it. This isneeded by everything, as it has all the gcc utils required forcompiling anything!p. While xcode is downloading from the Apple Dev Center install all your standard applications (Quicksilver, Adium, Textmate etc).p. Asmentioned above some security updates will over write files in defaultsystem locations; meaning your custom setup will be lost. This guidewill try to avoid such things and install to custom locations.p. Anyway, time to get to work so crack open a terminal window and lets begin.p. MySQLDownload the latest stable release for your machine (please make sure you download the right version!)Unpackage and change in to the new MySQL directory./configure --prefix=/usr/local/mysql_dev --with-extra-charsets=complex--enable-thread-safe-client --enable-local-infile --enable-sharedmakesudo make installcd /usr/local/mysql_devsudo./bin/mysql_install_db --user=mysql --basedir=/usr/local/mysql_dev(make a note of the password commands needed to set a root user)sudo chown -R mysql ./varsudo /usr/local/mysql_dev/bin/mysqld_safe %(=amp)&amp;% (this starts the mysql daemon)use the commands from above to set your root passwordp. Thatis MySQL setup and running, but to get it to start on boot you willneed to copy the text below and save it to/Library/LaunchDaemons/com.mysql.mysqld.plistp.  &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt; &nbsp;&nbsp;&nbsp; &lt;key&gt;KeepAlive&lt;/key&gt; &nbsp;&nbsp;&nbsp; &lt;true/&gt; &nbsp;&nbsp;&nbsp; &lt;key&gt;Label&lt;/key&gt; &nbsp;&nbsp;&nbsp; &lt;string&gt;com.mysql.mysqld&lt;/string&gt; &nbsp;&nbsp;&nbsp; &lt;key&gt;Program&lt;/key&gt; &nbsp;&nbsp;&nbsp; &lt;string&gt;/usr/local/mysql_dev/bin/mysqld_safe&lt;/string&gt; &nbsp;&nbsp;&nbsp; &lt;key&gt;RunAtLoad&lt;/key&gt; &nbsp;&nbsp;&nbsp; &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt;p. Now run these commands to get MySQL to start at boot:sudo chown root /Library/LaunchDaemons/com.mysql.mysqld.plistsudo launchctl load -w /Library/LaunchDaemons/com.mysql.mysqld.plistp. Also add the below line to you ~/.profile&nbsp;&nbsp;&nbsp; export PATH="/usr/local/bin:/usr/local/sbin:/usr/local/mysql_dev/bin:$PATH"p. That is it! MySQL is sorted... NEXT!p. PHPDownload the latest stable release in to your source folderUnpackage and change in to the new php directory./configure --prefix=/usr --without-iconv--with-mysql=/usr/local/mysql_dev --with-pdo-mysql=/usr/local/mysql_dev--with-apxs2=/usr/sbin/apxs --with-curl=/opt/local/bin/curl --with-zlib--with-bz2makesudo make installFrom your source unpacked directory copy the shared object: sudo cp ./libs/libphp5.so /usr/libexec/apache2/libphp5_dev.soCheck in /usr/bin for your php binary and rename it properly:ls /usr/bin/php*sudo mv /usr/bin/php.dSYM /usr/bin/phpFix your pear install directorycd /usr/lib/phpsudo pear config-set php_dir /usr/lib/phpp. PHP done and dusted... Almost finished..p. ApacheDownload the latest stable version into your source folderUnpackage it and guess what, change into the httpd directory./configure -enable-layout=Darwin -enable-mods-shared=allmakesudo make installcomment out the old php library load and add a new one in your /etc/apache2/httpd.confLoadModule php5_module&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; libexec/apache2/libphp5_dev#LoadModule php5_module&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; libexec/apache2/libphp5.soenable vhosts in your /etc/apache2/httpd.conf (Include /private/etc/apache2/extra/httpd-vhosts.conf)fix up your /etc/apache2/extra/httpd-vhosts.conf with appropriatevhosts.add a line in your /etc/hosts for each virtual hostp. That is everything up and running, not so hard when you know how!						